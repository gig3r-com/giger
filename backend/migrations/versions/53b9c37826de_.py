"""empty message

Revision ID: 53b9c37826de
Revises: 
Create Date: 2023-11-26 00:44:49.926029

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '53b9c37826de'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type')
    )
    op.create_table('affiliation_list',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('authorization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('phash', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gig_category_names',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('gig_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('identity_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('message_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('account',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('balance', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['type'], ['account_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('handle', sa.String(), nullable=False),
    sa.Column('phash_id', sa.Integer(), nullable=True),
    sa.Column('alias', sa.String(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('cyberware_percentage', sa.Integer(), nullable=True),
    sa.Column('affiliation', sa.Integer(), nullable=True),
    sa.Column('profession', sa.String(), nullable=True),
    sa.Column('insurance', sa.Boolean(), nullable=True),
    sa.Column('identity', sa.Integer(), nullable=True),
    sa.Column('id_valid_to', sa.Date(), nullable=True),
    sa.Column('hacking_lvl', sa.Integer(), nullable=True),
    sa.Column('reputation', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['affiliation'], ['affiliation_list.id'], ),
    sa.ForeignKeyConstraint(['identity'], ['identity_type.id'], ),
    sa.ForeignKeyConstraint(['phash_id'], ['authorization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('handle')
    )
    op.create_table('account_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gig',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('category', sa.Integer(), nullable=True),
    sa.Column('reputation_required', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('opened_by', sa.Integer(), nullable=True),
    sa.Column('taken_by', sa.Integer(), nullable=True),
    sa.Column('archived', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['gig_category_names.id'], ),
    sa.ForeignKeyConstraint(['opened_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['status'], ['gig_status.id'], ),
    sa.ForeignKeyConstraint(['taken_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('sender', sa.Integer(), nullable=True),
    sa.Column('text', sa.String(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['sender'], ['user.id'], ),
    sa.ForeignKeyConstraint(['status'], ['message_status.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('user_favorites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('favorite_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['favorite_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('conversation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['message'], ['message.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('to_user', sa.Integer(), nullable=True),
    sa.Column('from_user', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('gig_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['from_user'], ['user.id'], ),
    sa.ForeignKeyConstraint(['gig_id'], ['gig.id'], ),
    sa.ForeignKeyConstraint(['to_user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('conversation_message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=True),
    sa.Column('message_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversation.id'], ),
    sa.ForeignKeyConstraint(['message_id'], ['message.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction_audit_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('to_account_id', sa.String(), nullable=True),
    sa.Column('from_account_id', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['from_account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['to_account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transaction_audit_log')
    op.drop_table('conversation_message')
    op.drop_table('transaction')
    op.drop_table('conversation')
    op.drop_table('user_favorites')
    op.drop_table('message')
    op.drop_table('gig')
    op.drop_table('account_user')
    op.drop_table('user')
    op.drop_table('account')
    op.drop_table('message_status')
    op.drop_table('identity_type')
    op.drop_table('gig_status')
    op.drop_table('gig_category_names')
    op.drop_table('authorization')
    op.drop_table('affiliation_list')
    op.drop_table('account_type')
    # ### end Alembic commands ###
