# networks:
#   default:
#     external: true
#     name: traefik-proxy

services:
  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - ${PORT:-8080}:80
    volumes:
      - ./docker/nginx/:/etc/nginx/conf.d/

  frontend:
    image: mivalsten/gig3r-frontend:${GIGER_IMAGE_TAG:-latest}
    build:
      context: ./frontend
    restart: unless-stopped
    expose:
      - 8080

  backend:
    image: mivalsten/gig3r-backend:${GIGER_IMAGE_TAG:-latest}
    build:
      context: ./backendDotnet/Giger
      dockerfile: ../Dockerfile
      args:
        - ASPNETCORE_CONFIGURATION=Debug
    restart: unless-stopped
    expose:
      - 8080
    ports:
      - 9090:8080
    volumes:
      - ./backendDotnet/Giger/appsettings.json:/app/appsettings.json
    environment:
      #- GigerDB__ConnectionString=mongodb://mongo:27017
      - GigerDB__Host=mongo
      - GigerDB__Port=27017
      - GigerDB__Username=${GIGER_USERNAME:-giger}
      - GigerDB__Password=${GIGER_PASSWORD:-giger}
      - GigerDB__DatabaseName=${GIGER_DATABASE:-admin}
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - mongo

  mongo:
    image: mongo:latest
    restart: unless-stopped
    expose:
      - 27017
    ports:
      - 27017:27017
    volumes:
      - ./docker/volumes/mongo:/data/db
      - ./docker/mongo_init:/docker-entrypoint-initdb.d
      - ./data/mongo:/data/
    environment:
      MONGO_INITDB_DATABASE: ${GIGER_DATABASE:-admin}
      MONGO_INITDB_ROOT_USERNAME: ${GIGER_USERNAME:-giger}
      MONGO_INITDB_ROOT_PASSWORD: ${GIGER_PASSWORD:-giger}

  mongo-express:
    image: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_AUTH_DATABASE: ${GIGER_DATABASE:-admin}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${GIGER_USERNAME:-giger}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${GIGER_PASSWORD:-giger}
    depends_on:
      - mongo
      
