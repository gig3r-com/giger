---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gig3r.frontend.app" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "gig3r.frontend.app" . }}
  template:
    metadata:
      labels:
        app: {{ include "gig3r.frontend.app" . }}
        randstr: {{ randAlphaNum 20 }}
    spec:
      containers:
      - image: {{ include "gig3r.frontend.image" . }}
        name: {{ include "gig3r.frontend.app" . }}
        ports:
        - containerPort: 8080
          protocol: TCP
      restartPolicy: Always

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gig3r.backend.app" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "gig3r.backend.app" . }}
  template:
    metadata:
      labels:
        app: {{ include "gig3r.backend.app" . }}
        randstr: {{ randAlphaNum 20 }}
    spec:
      containers:
      - image: {{ include "gig3r.backend.image" . }}
        name: {{ include "gig3r.backend.app" . }}
        ports:
        - containerPort: 80
          protocol: TCP
        env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gig3r-secret
              key: DB_PASSWORD
        volumeMounts:
        - mountPath: /app/.config.json
          name: config
          subPath: "backend_config.json"
          readOnly: true
      volumes:
      - name: config
        secret:
          secretName: gig3r-secret
      restartPolicy: Always

---

{{- if ne .Values.environment "app" -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gig3r.swagger.app" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "gig3r.swagger.app" . }}
  template:
    metadata:
      labels:
        app: {{ include "gig3r.swagger.app" . }}
        randstr: {{ randAlphaNum 20 }}
    spec:
      containers:
      - image: swaggerapi/swagger-ui
        name: {{ include "gig3r.swagger.app" . }}
        ports:
        - containerPort: 8080
          protocol: TCP
        env:
        - name: SWAGGER_JSON
          value: /tmp/swagger.yml
        - name: BASE_URL
          value: "/swagger"
        {{- if hasKey (default dict .Values.swagger) "envs"  }}
        {{- range $key, $val := .Values.swagger.envs }}
        - name: {{ $key }}
          value: {{ $val }}
        {{- end }}
        {{- end }}
        volumeMounts:
        - mountPath: /tmp/swagger.yml
          name: config
          subPath: "config"
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: swagger-config
      restartPolicy: Always

{{- end -}}