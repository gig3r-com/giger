---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gig3r.frontend.app" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "gig3r.frontend.app" . }}
  template:
    metadata:
      labels:
        app: {{ include "gig3r.frontend.app" . }}
        randstr: {{ randAlphaNum 20 }}
    spec:
      containers:
      - image: {{ include "gig3r.frontend.image" . }}
        name: {{ include "gig3r.frontend.app" . }}
        ports:
        - containerPort: 8080
          protocol: TCP
      restartPolicy: Always

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gig3r.backend.app" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "gig3r.backend.app" . }}
  template:
    metadata:
      labels:
        app: {{ include "gig3r.backend.app" . }}
        randstr: {{ randAlphaNum 20 }}
    spec:
      containers:
      - image: {{ include "gig3r.backend.image" . }}
        name: {{ include "gig3r.backend.app" . }}
        ports:
        - containerPort: 8080
          protocol: TCP
        env:
        - name: GigerDB__Host
          value: {{ include "gig3r.mongodb.app" . }}
        - name: GigerDB__Port
          value: "27017"
        - name: GigerDB__Username
          valueFrom:
            secretKeyRef:
              name: gig3r-secret
              key: MONGO_INITDB_ROOT_USERNAME
        - name: GigerDB__Password
          valueFrom:
            secretKeyRef:
              name: gig3r-secret
              key: MONGO_INITDB_ROOT_PASSWORD
        - name: GigerDB__DatabaseName
          valueFrom:
            secretKeyRef:
              name: gig3r-secret
              key: MONGO_INITDB_DATABASE
        - name: ASPNETCORE_ENVIRONMENT
          value: {{ include "gig3r.backend.environment" .}}
        # volumeMounts:
        # - mountPath: /app/.config.json
        #   name: config
        #   subPath: "backend_config.json"
        #   readOnly: true
      volumes:
      - name: config
        secret:
          secretName: gig3r-secret
      restartPolicy: Always

---

# mongodb deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gig3r.mongodb.app" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "gig3r.mongodb.app" . }}
  template:
    metadata:
      labels:
        app: {{ include "gig3r.mongodb.app" . }}
        randstr: {{ randAlphaNum 20 }}
    spec:
      containers:
      - image: mongo:latest
        name: {{ include "gig3r.mongodb.app" . }}
        ports:
        - containerPort: 27017
          protocol: TCP
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: gig3r-secret
              key: MONGO_INITDB_ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gig3r-secret
              key: MONGO_INITDB_ROOT_PASSWORD
        - name: MONGO_INITDB_DATABASE
          valueFrom:
            secretKeyRef:
              name: gig3r-secret
              key: MONGO_INITDB_DATABASE
        volumeMounts:
        {{- range $path, $_ := .Files.Glob "data/mongo/*.json" }}
        - name: mongo-config
          mountPath: /init/{{ $path | base }}
          subPath: {{ $path | base }}
        {{- end }}
        - name: mongo-scripts
          mountPath: /docker-entrypoint-initdb.d
      restartPolicy: Always
      volumes:
        - name: "mongo-config"
          configMap:
            name: "mongo-config"
        - name: "mongo-scripts"
          configMap:
            name: "mongo-scripts"
---

# mongoexpress deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gig3r.mongo-express.app" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "gig3r.mongo-express.app" . }}
  template:
    metadata:
      labels:
        app: {{ include "gig3r.mongo-express.app" . }}
        randstr: {{ randAlphaNum 20 }}
    spec:
      containers:
      - image: mongo-express:latest
        name: {{ include "gig3r.mongo-express.app" . }}
        ports:
        - containerPort: 8081
          protocol: TCP
        env:
        - name: ME_CONFIG_MONGODB_SERVER
          value: {{ include "gig3r.mongodb.app" . }}
        - name: ME_CONFIG_MONGODB_AUTH_DATABASE
          valueFrom:
            secretKeyRef:
              name: gig3r-secret
              key: MONGO_INITDB_DATABASE
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          valueFrom:
            secretKeyRef:
              name: gig3r-secret
              key: MONGO_INITDB_ROOT_USERNAME
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          valueFrom:
            secretKeyRef:
              name: gig3r-secret
              key: MONGO_INITDB_ROOT_PASSWORD

        - name: ME_CONFIG_BASICAUTH_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-express-secret
              key: ME_CONFIG_BASICAUTH_USERNAME
        - name: ME_CONFIG_BASICAUTH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-express-secret
              key: ME_CONFIG_BASICAUTH_PASSWORD
      restartPolicy: Always

