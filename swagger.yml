openapi: '3.0.2'
info:
  title: Giger
  version: '1.0'
servers:
  - url: https://dev.gig3r.com/api/v1

paths:
  /gigs:
    get:
      summary: Retrieve all gigs
      responses:
        '200':
          description: A list of all gigs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gig'
    post:
      summary: Create a new gig
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gig'
      responses:
        '201':
          description: Gig created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gig'
  /gigs/{gigId}:
    get:
      summary: Retrieve a gig by ID
      parameters:
        - in: path
          name: gigId
          required: true
          description: ID of the gig to retrieve
          schema:
            type: string
      responses:
        '200':
          description: The requested gig
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gig'
    put:
      summary: Update a gig by ID
      parameters:
        - in: path
          name: gigId
          required: true
          description: ID of the gig to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gig'
      responses:
        '200':
          description: Gig updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gig'
    delete:
      summary: Delete a gig by ID
      parameters:
        - in: path
          name: gigId
          required: true
          description: ID of the gig to delete
          schema:
            type: string
      responses:
        '204':
          description: Gig deleted successfully
components:
  schemas:
    Gig:
      type: object
      properties:
        payout:
          type: number
        title:
          type: string
        description:
          type: string
        category:
          type: string
          enum:
            - intel
            - tech
            - Guns & ammo
            - drugs
            - other merch
            - Item acquisition
            - android acquisition
            - debt collection
            - intimidation
            - kidnapping
            - bodyguard
            - hit
            - lover experience
            - sex doll
            - delivery
            - quickie
            - first aid
            - cyberware
            - medEvac
            - renting location
            - bank account manipulation
            - spoofing
            - security
            - android hijack
            - complaint
        reputationRequired:
          type: integer
          enum: [0, 1, 2, 3, 4, 5]
        id:
          type: string
        anonymizedAuthor:
          type: boolean
        status:
          type: string
          enum:
            - available
            - in_progress
            - completed
            - pending
            - dispute
        authorId:
          type: string
        takenById:
          type: string
      required:
        - payout
        - title
        - description
        - category
        - id
        - status
        - authorId
      example:
        payout: 1000
        title: "Sample Gig"
        description: "Description of the gig"
        category: "tech"
        reputationRequired: 3
        id: "123456"
        anonymizedAuthor: false
        status: "available"
        authorId: "user123"
        takenById: null
